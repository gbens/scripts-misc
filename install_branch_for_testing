#!/bin/sh

# Installs a branch of the Perl 5 core distribution for testing purposes,
# then installs 'cpanm' against the newly installed 'perl'.

# Prerequisites:
# I. Requires existence of two directories whose names are assigned to environmental variables:
# $TESTINGDIR
#   A directory underneath which you will have directories such as
#   'blead', 'threaded_blead', etc., under which you will have 'bin' and 'lib'
#   Example: ~/testing/
# $SECONDARY_CHECKOUT_DIR
#   A git checkout of perl.  This is labelled "secondary" in the belief that 
#   you will not want to risk harm to the git checkout you use for everyday
#   Perl 5 core development.
#   Example: ~/gitwork/perl2/
# II. Other environmental variables:
# $TEST_JOBS
#   An integer such as 4 or 8, appropriate to the number of cores in your
#   machine, which will determine how many jobs 'make' will attempt to run in
#   parallel.
# III. Other programs in PATH:
#   git
#   make
#   get_cpanm

# Usage:
#
#   $> install_branch_for_testing <branch>
#
# If no value is provided for <branch>, program will default to installing
# 'blead'.

# Adapted from Florian Ragwitz and Karl Williamson

####################

# Don't let me use uninit vars, and any error is a problem
set -u
set -e
# Print expanded commands
set -x

if [ ! -d $TESTINGDIR ]; then
  echo "FAILED:  could not locate TESTINGDIR"
  exit 1
fi

if [ ! -d $SECONDARY_CHECKOUT_DIR ]; then
  echo "FAILED:  could not locate SECONDARY_CHECKOUT_DIR"
  exit 1
fi

command -v get_cpanm > /dev/null || \
    {
        echo "FAILED:  could not locate 'get_cpanm' in PATH"
        exit 1
    }

if [ "$#" -gt 0 ]; then
    BRANCH=$1
else
    BRANCH=blead
fi

echo "Handling branch: $BRANCH"

cd $TESTINGDIR
test -d $BRANCH && rm -rfv $BRANCH
BRANCHDIR="$TESTINGDIR/$BRANCH"
mkdir -p $BRANCHDIR
cd $SECONDARY_CHECKOUT_DIR
git clean -dfx
git fetch --prune origin
git checkout $BRANCH
if [ "$BRANCH" = 'blead' ]; then
    git rebase origin/blead
fi

# configure to install under $BRANCHDIR; don't bother with man pages
./Configure -des -Dusedevel -Uversiononly -Dprefix=${BRANCHDIR} -Dman1dir=none -Dman3dir=none

make -j${TEST_JOBS} install

cd $BRANCHDIR
get_cpanm
